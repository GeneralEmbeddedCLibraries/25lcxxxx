////////////////////////////////////////////////////////////////////////////////
/**
*@file      25lcxxxx.h
*@brief    	API for 25LCxxxx EEPROM device
*@author    Ziga Miklosic
*@date      08.05.2021
*@version	V1.0.0
*/
////////////////////////////////////////////////////////////////////////////////
/**
*@addtogroup 25LCXXXX_API
* @{ <!-- BEGIN GROUP -->
*/
////////////////////////////////////////////////////////////////////////////////

#ifndef _25LCXXXX_H_
#define _25LCXXXX_H_

////////////////////////////////////////////////////////////////////////////////
// Includes
////////////////////////////////////////////////////////////////////////////////
#include <stdint.h>
#include <stdbool.h>

////////////////////////////////////////////////////////////////////////////////
// Definitions
////////////////////////////////////////////////////////////////////////////////

/**
 * 	Status
 */
typedef enum
{
	e25LCXXXX_OK			= 0,		/**<Normal operation */
	e25LCXXXX_ERROR			= 0x01,		/**<General error */
	e25LCXXXX_ERROR_SPI		= 0x02,		/**<SPI error */
	e25LCXXXX_ERROR_INIT	= 0x04,		/**<Initialisation error */
	e25LCXXXX_ERROR_ADDR	= 0x08,		/**<Invalid memory address */
} _25lcxxxx_status_t;

////////////////////////////////////////////////////////////////////////////////
// Functions Prototypes
////////////////////////////////////////////////////////////////////////////////
_25lcxxxx_status_t _25lcxxxx_init	(void);
_25lcxxxx_status_t _25lcxxxx_deinit	(void);
_25lcxxxx_status_t _25lcxxxx_write	(const uint32_t addr, const uint32_t size, const uint8_t * const p_data);
_25lcxxxx_status_t _25lcxxxx_read	(const uint32_t addr, const uint32_t size, uint8_t * const p_data);

#endif // _25LCXXXX_H_
